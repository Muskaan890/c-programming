#include<stdio.h>
void swap(int *a, int *b)
{
    int t=*a;
    *a=*b;
    *b=t;
}
int partition(int arr[], int low, int high)
{
    int pivot=arr[high];
    int i=low;
 for ( int j=low; j<high; j++)
 {
      if(arr[j]<=pivot)
      {
          swap(&arr[i],&arr[j]);
          i++;
      }
 }
 swap(&arr[i], &arr[high]);
 return i;

}
int quickselect(int arr[],int low,int high, int k)
{
    if(low<=high){
        int p=partition(arr, low,high);
    if(p==k)
        return arr[p];
    else
        if(p>k)
        return quickselect(arr, low, p-1, k);
    else
        return quickselect(arr,p+1, high,k);
}
return -1;
}
int main()
{
    int arr[]={12,3,5,18,26,4};
    int n= sizeof(arr) / sizeof(arr[0]);
   int k = 4;
    int result = quickselect(arr, 0, n-1, k-1);
    if(result != -1)
        printf("%dth smallest element is %d\n",k,result);
    else
        printf("invalid k\n");
}
        
    return 0;
}
